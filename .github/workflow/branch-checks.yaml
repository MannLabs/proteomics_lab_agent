# checks to run on branches for each pull request
name: branch-checks

on:
  pull_request:

jobs:
  pre-commit:
    name: Run all pre-commit hooks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - uses: pre-commit/action@v3.0.1

  get-code-review-input:
    runs-on: ubuntu-latest
    #if: contains(github.event.pull_request.labels.*.name, 'code-review')
    steps:
      - uses: MannLabs/alphashared/actions/get-code-review-input@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    # - name: Run shared unit tests
    #   run: |
    #     pip install -r requirements_development.txt
    #     pip install -r shared/requirements_shared.txt
    #     pip freeze
    #     python -m pytest shared

    # # strictly speaking, the webapp and airfloe test sets should be in separate python envs but should be fine for now
    # - name: Run webapp unit tests
    #   run: |
    #     pip install -r webapp/requirements_webapp.txt
    #     pip freeze
    #     python -m pytest webapp


  # docker-compose-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - run: |
  #         echo -e "AIRFLOW_UID=$(id -u)" > envs/.env-airflow
  #     - uses: hoverkraft-tech/compose-action@v2.0.0
  #       with:
  #         compose-file: "docker-compose.yaml"
  #         compose-flags: "--env-file=envs/.env-airflow --env-file=envs/local.env --profile local"